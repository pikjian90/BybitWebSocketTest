<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="22" passed="16" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-28T04:01:38Z" name="BybitWebSocketTest Suite" finished-at="2022-03-28T04:02:34Z" duration-ms="55331">
    <groups>
    </groups>
    <test started-at="2022-03-28T04:01:38Z" name="BybitWebSocketTest Test" finished-at="2022-03-28T04:02:34Z" duration-ms="55331">
      <class name="testcase.Kline">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:38Z" name="beforeSuite" finished-at="2022-03-28T04:01:38Z" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="startConnection()[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:38Z" name="startConnection" finished-at="2022-03-28T04:01:40Z" duration-ms="2031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startConnection -->
        <test-method signature="testConnection()[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:40Z" name="testConnection" finished-at="2022-03-28T04:01:40Z" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnection -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:42Z" name="testMessage" data-provider="Kline" finished-at="2022-03-28T04:01:45Z" duration-ms="3121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BTCUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kline_1m]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:45Z" name="testMessage" data-provider="Kline" finished-at="2022-03-28T04:01:48Z" duration-ms="3014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ETHUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kline_1m]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:48Z" name="testMessage" data-provider="Kline" finished-at="2022-03-28T04:01:51Z" duration-ms="3015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BITUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kline_1h]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:51Z" name="testMessage" data-provider="Kline" finished-at="2022-03-28T04:01:54Z" duration-ms="3037" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[XRPUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kline_1h]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Symbol is incorrect expected [XRPUSDT] but found [BTCUSDT],
SymbolName is incorrect expected [XRPUSDT] but found [BTCUSDT],
KlineType is incorrect expected [1h] but found [1m],
Trading Pair is incorrect expected [XRPUSDT] but found [BTCUSDT],
Trading Pair is incorrect expected [XRPUSDT] but found [BTCUSDT]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Symbol is incorrect expected [XRPUSDT] but found [BTCUSDT],
SymbolName is incorrect expected [XRPUSDT] but found [BTCUSDT],
KlineType is incorrect expected [1h] but found [1m],
Trading Pair is incorrect expected [XRPUSDT] but found [BTCUSDT],
Trading Pair is incorrect expected [XRPUSDT] but found [BTCUSDT]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at testcase.Kline.testMessage(Kline.java:113)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:54Z" name="testMessage" data-provider="Kline" finished-at="2022-03-28T04:01:57Z" duration-ms="3013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DOTUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kline_1w]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method is-config="true" signature="closeConnection()[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:01:57Z" name="closeConnection" finished-at="2022-03-28T04:01:58Z" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeConnection -->
        <test-method is-config="true" signature="tearDownSuite()[pri:0, instance:testcase.Kline@515aebb0]" started-at="2022-03-28T04:02:39Z" name="tearDownSuite" finished-at="2022-03-28T04:02:39Z" duration-ms="455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownSuite -->
      </class> <!-- testcase.Kline -->
      <class name="testcase.Trade">
        <test-method is-config="true" signature="startConnection()[pri:0, instance:testcase.Trade@245b4bdc]" started-at="2022-03-28T04:02:16Z" name="startConnection" finished-at="2022-03-28T04:02:17Z" duration-ms="1032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startConnection -->
        <test-method signature="testConnection()[pri:0, instance:testcase.Trade@245b4bdc]" started-at="2022-03-28T04:02:17Z" name="testConnection" finished-at="2022-03-28T04:02:17Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnection -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Trade@245b4bdc]" started-at="2022-03-28T04:02:17Z" name="testMessage" data-provider="Trade" finished-at="2022-03-28T04:02:20Z" duration-ms="3036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BTCUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[trade]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Trade@245b4bdc]" started-at="2022-03-28T04:02:20Z" name="testMessage" data-provider="Trade" finished-at="2022-03-28T04:02:23Z" duration-ms="3054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ETHUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[trade]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Trade@245b4bdc]" started-at="2022-03-28T04:02:23Z" name="testMessage" data-provider="Trade" finished-at="2022-03-28T04:02:26Z" duration-ms="3036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BITUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[trade]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Trade@245b4bdc]" started-at="2022-03-28T04:02:26Z" name="testMessage" data-provider="Trade" finished-at="2022-03-28T04:02:30Z" duration-ms="3054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XRPUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[trade]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.Trade@245b4bdc]" started-at="2022-03-28T04:02:30Z" name="testMessage" data-provider="Trade" finished-at="2022-03-28T04:02:33Z" duration-ms="3020" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[DOTUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[trade]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Symbol is incorrect expected [DOTUSDT] but found [BITUSDT],
SymbolName is incorrect expected [DOTUSDT] but found [BITUSDT]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Symbol is incorrect expected [DOTUSDT] but found [BITUSDT],
SymbolName is incorrect expected [DOTUSDT] but found [BITUSDT]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at testcase.Trade.testMessage(Trade.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method is-config="true" signature="closeConnection()[pri:0, instance:testcase.Trade@245b4bdc]" started-at="2022-03-28T04:02:33Z" name="closeConnection" finished-at="2022-03-28T04:02:34Z" duration-ms="1008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeConnection -->
      </class> <!-- testcase.Trade -->
      <class name="testcase.RealTimes">
        <test-method is-config="true" signature="startConnection()[pri:0, instance:testcase.RealTimes@dd8ba08]" started-at="2022-03-28T04:01:58Z" name="startConnection" finished-at="2022-03-28T04:01:59Z" duration-ms="1031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startConnection -->
        <test-method signature="testConnection()[pri:0, instance:testcase.RealTimes@dd8ba08]" started-at="2022-03-28T04:01:59Z" name="testConnection" finished-at="2022-03-28T04:01:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConnection -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.RealTimes@dd8ba08]" started-at="2022-03-28T04:02:00Z" name="testMessage" data-provider="RealTimes" finished-at="2022-03-28T04:02:03Z" duration-ms="3049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BTCUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[realtimes]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.RealTimes@dd8ba08]" started-at="2022-03-28T04:02:03Z" name="testMessage" data-provider="RealTimes" finished-at="2022-03-28T04:02:06Z" duration-ms="3023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ETHUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[realtimes]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.RealTimes@dd8ba08]" started-at="2022-03-28T04:02:06Z" name="testMessage" data-provider="RealTimes" finished-at="2022-03-28T04:02:09Z" duration-ms="3034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BITUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[realtimes]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.RealTimes@dd8ba08]" started-at="2022-03-28T04:02:09Z" name="testMessage" data-provider="RealTimes" finished-at="2022-03-28T04:02:12Z" duration-ms="3018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XRPUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[realtimes]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method signature="testMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testcase.RealTimes@dd8ba08]" started-at="2022-03-28T04:02:12Z" name="testMessage" data-provider="RealTimes" finished-at="2022-03-28T04:02:15Z" duration-ms="3036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DOTUSDT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[realtimes]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sub]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[FALSE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessage -->
        <test-method is-config="true" signature="closeConnection()[pri:0, instance:testcase.RealTimes@dd8ba08]" started-at="2022-03-28T04:02:15Z" name="closeConnection" finished-at="2022-03-28T04:02:16Z" duration-ms="1015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeConnection -->
      </class> <!-- testcase.RealTimes -->
    </test> <!-- BybitWebSocketTest Test -->
  </suite> <!-- BybitWebSocketTest Suite -->
</testng-results>
